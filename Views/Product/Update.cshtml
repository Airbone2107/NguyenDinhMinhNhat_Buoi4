@model NguyenDinhMinhNhat_Buoi4.Models.Product
@using Microsoft.AspNetCore.Mvc.Rendering

@{
	ViewData["Title"] = "Cập nhật sản phẩm";
}

<main>
	<div class="form-container">
		<h1>Cập nhật sản phẩm</h1>

		<form asp-action="Update" enctype="multipart/form-data">
			<input type="hidden" asp-for="Id" />
			<div asp-validation-summary="All" class="text-danger"></div>

			<div class="form-grid">
				<div class="form-group">
					<label asp-for="Name">Tên sản phẩm</label>
					<input asp-for="Name" class="form-control" />
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>

				<div class="form-group">
					<label asp-for="Price">Giá bán</label>
					<input asp-for="Price" class="form-control" />
					<span asp-validation-for="Price" class="text-danger"></span>
				</div>

				<div class="form-group">
					<label asp-for="CategoryId">Danh mục</label>
					<select asp-for="CategoryId" asp-items="ViewBag.Categories" class="form-control"></select>
				</div>

				<div class="form-group full-width">
					<label asp-for="Description">Mô tả sản phẩm</label>
					<textarea asp-for="Description" class="form-control" rows="4"></textarea>
					<span asp-validation-for="Description" class="text-danger"></span>
				</div>

				<div class="form-group">
					<label>Ảnh đại diện hiện tại</label>
					<div class="image-preview-container">
						@if (!string.IsNullOrEmpty(Model.ImageUrl))
						{
							<img src="@Model.ImageUrl" class="current-image" id="image-preview" alt="Current Image">
						}
						else 
						{
							<img src="/images/no-image.jpg" class="current-image" id="image-preview" alt="No Image">
						}
					</div>
					<label asp-for="ImageUrl">Cập nhật ảnh</label>
					<input type="file" name="imageUrl" id="image-upload" class="form-control" accept="image/*" />
				</div>
			</div>

			<button type="submit" class="button button4">Cập nhật</button>
		</form>
	</div>
</main>

<style>
	.form-container {
		max-width: 1200px;
		margin: 20px auto;
		padding: 20px;
		background: white;
		border-radius: 15px;
		box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
	}

	.form-grid {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: 20px;
		margin-top: 20px;
	}

	.full-width {
		grid-column: 1 / -1;
	}

	.form-group label {
		display: block;
		margin-bottom: 8px;
		font-weight: bold;
	}

	.form-control {
		width: 100%;
		padding: 10px;
		border: 1px solid #ddd;
		border-radius: 5px;
	}

	.current-image {
		max-width: 150px;
		max-height: 150px;
		margin: 5px 0 15px;
		border-radius: 8px;
		object-fit: cover;
	}

	.image-preview-container {
		margin: 10px 0;
		min-height: 150px;
		display: flex;
		align-items: center;
		justify-content: center;
	}

	@@media (max-width: 768px) {
		.form-grid {
			grid-template-columns: 1fr;
		}
	}
</style>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const imageUpload = document.getElementById('image-upload');
			const imagePreview = document.getElementById('image-preview');
			const originalImageSrc = imagePreview.src;

			imageUpload.addEventListener('change', function (event) {
				const file = event.target.files[0];
				if (file) {
					const reader = new FileReader();
					reader.onload = function (e) {
						imagePreview.src = e.target.result;
					};
					reader.readAsDataURL(file);
				} else {
					// Nếu không chọn ảnh hoặc hủy chọn, trở về ảnh ban đầu
					imagePreview.src = originalImageSrc;
				}
			});
		});
	</script>
}
